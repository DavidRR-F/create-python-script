name: Python package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Format Check
        run: |
          poetry run black --check .

      - name: Linting
        run: |
          poetry run flake8 .

      - name: Run Tests
        run: |
          poetry run pytest --cov=pyplater

      - name: Code Coverage Report
        id: coverage
        run: |
          poetry run coverage report --fail-under=90

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: .coverage

      - name: Check previous version
        id: previous_version
        run: |
          PREVIOUS_VERSION=$(git show -s --format=%B | awk '/^Version:/ {print substr($2, 1, length($2)-1)}')
          echo "PREVIOUS_VERSION=${PREVIOUS_VERSION}" >> $GITHUB_ENV

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(poetry version | awk '{print $2}')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      - name: Check version difference
        run: |
          if [[ "${{ env.PREVIOUS_VERSION }}" == "${{ env.CURRENT_VERSION }}" ]]; then
            echo "The current version is the same as the previous version. Failing the build."
            exit 1
          else
            echo "Package version: ${{ env.CURRENT_VERSION }}"
          fi
